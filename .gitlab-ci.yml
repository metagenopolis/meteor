# This file is a template, and might need editing before it works on your project.
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Python.gitlab-ci.yml

# Official language image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/python/tags/
image: python:3.11

# Change pip's cache directory to be inside the project directory since we can
# only cache local items.
variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

# Pip's cache doesn't store the python packages
# https://pip.pypa.io/en/stable/topics/caching/
#
# If you want to also cache the installed packages, you have to install
# them in a virtualenv and cache it as well.
cache:
  paths:
    - .cache/pip
    - venv/

before_script:
  - python --version  # For debugging
  - pip install virtualenv
  - virtualenv venv
  - source venv/bin/activate
  - pip install pytest pytest-cov pytest-datadir pysam flake8 mypy pandas pandas-stubs pylint anybadge twine wheel --quiet
  - wget https://sourceforge.net/projects/bowtie-bio/files/bowtie2/2.5.1/bowtie2-2.5.1-linux-x86_64.zip/download -P tools --quiet
  - unzip -d tools/ tools/download
  - export PATH=$(pwd)/tools/bowtie2-2.5.1-linux-x86_64:$PATH
  - apt-get install libbz2-dev liblzma-dev
  - wget https://github.com/samtools/bcftools/releases/download/1.18/bcftools-1.18.tar.bz2 -P bcftools --quiet
  - cd bcftools-1.18/htslib-1.18/ && ./configure && make && make install
  - cd .. && ./configure && make && make install


pytest:
  stage: test
  # pytest-mypy types-setuptools pytest-pylint
    # - apt-get update && apt-get install -y bowtie2
  script:
  # --mypy --pylint --pylint-rcfile=.pylintrc --pylint-jobs=4
    - pytest --cov=meteor --cov-report xml
    - coverage report
  coverage: '/TOTAL.+ ([0-9]{1,3}%)/'
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml
  only:
    - dev

pytest:310:
  image: python:3.10
  stage: test
  before_script:
    - wget https://sourceforge.net/projects/bowtie-bio/files/bowtie2/2.5.1/bowtie2-2.5.1-linux-x86_64.zip/download -P tools --quiet
    - unzip -d tools/ tools/download
    - export PATH=$(pwd)/tools/bowtie2-2.5.1-linux-x86_64:$PATH
    - pip install pytest pytest-datadir pysam
  script:
    - pytest
  only:
    - dev

pytest:312:
  image: python:3.12
  stage: test
  before_script:
    - wget https://sourceforge.net/projects/bowtie-bio/files/bowtie2/2.5.1/bowtie2-2.5.1-linux-x86_64.zip/download -P tools --quiet
    - unzip -d tools/ tools/download
    - export PATH=$(pwd)/tools/bowtie2-2.5.1-linux-x86_64:$PATH
    - pip install pytest pytest-datadir pysam
  script:
    - pytest
  only:
    - dev
  allow_failure: true

flake8:
  stage: test
  script:
    - flake8 --max-line-length=120 meteor
  only:
    - dev
  allow_failure: true

mypy:
  stage: test
  script:
    - mypy meteor
  only:
    - dev
  allow_failure: true

pylint:
  stage: test
  before_script:
    - mkdir ./pylint
  script:
    - pylint --rcfile=.pylintrc --exit-zero --output-format=text meteor | tee ./pylint/pylint.log
    - PYLINT_SCORE=$(sed -n 's/^Your code has been rated at \([-0-9.]*\)\/.*/\1/p' ./pylint/pylint.log)
    - anybadge --label=Pylint --file=pylint/pylint.svg --value=$PYLINT_SCORE 2=red 4=orange 8=yellow 10=green
    - echo "Pylint score is $PYLINT_SCORE"
  artifacts:
    paths:
      - ./pylint/
  only:
    - dev

run:
  stage: build
  script:
    - python setup.py bdist_wheel
    - TWINE_PASSWORD=${CI_JOB_TOKEN} TWINE_USERNAME=gitlab-ci-token python -m twine upload --skip-existing --repository-url ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/pypi dist/*
  artifacts:
    paths:
      - dist/*.whl
  only:
    - tags

build_conda:
  image: continuumio/miniconda3:latest
  stage: build
  before_script:
    - conda config --add channels conda-forge
    - conda config --add channels bioconda
    - conda config --set anaconda_upload yes
    - conda update  -n base -c defaults conda
    - conda install -y conda-verify
    - conda install -y anaconda-client
    - conda install -y conda-build
    - conda install -y git
    - anaconda login --hostname "$DOCKER_HOST" --username "$DOCKER_USER" --password "$DOCKER_PASS"
  script:
    - conda build conda_recipe
  after_script:
    - anaconda logout
  only:
    - tags


# pages:
#   stage: deploy
#   before_script:
#      - pip install sphinx sphinx-rtd-theme myst_parser pysam pandas
#   script:
#     - cd doc
#     - make html
#     - mv build/html/ ../public/
#   artifacts:
#     paths:
#       - public
#   only:
#     - dev
