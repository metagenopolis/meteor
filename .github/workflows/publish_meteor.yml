name: Publish meteor

on:
  release:
    types: [published]

jobs:
  meteortest:
    if: ${{ github.event.release.prerelease }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ConorMacBride/install-package@v1
        with:
          brew: bowtie2 freebayes
          apt: bowtie2 freebayes
      - name: Install Python
        uses: actions/setup-python@v4
      - name: Install poetry
        uses: abatilo/actions-poetry@v2
      - name: Install the project dependencies
        run: poetry install -C meteor
      - name: Run the automated tests (for example)
        run: poetry run -C meteor meteor test

  docker:
    if: ${{ !github.event.release.prerelease }}
    needs: conda
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          platforms: linux/amd64
          provenance: false
          tags: |
            ${{ secrets.DOCKER_USER }}/meteor:${{  github.ref_name }}
            ${{ secrets.DOCKER_USER }}/meteor:latest

  conda:
    if: ${{ !github.event.release.prerelease }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: conda-incubator/setup-miniconda@v3
        with:
          auto-update-conda: true
          channels: conda-forge,bioconda
      - name: Build and upload the conda package
        shell: bash -el {0}
        run: |
          conda config --set anaconda_upload yes
          conda install -y anaconda-client
          conda install -y conda-build
          conda install -y conda-verify
          conda build --token ${{ secrets.ANACONDA_TOKEN }} conda_recipe

  pypi:
    if: ${{ !github.event.release.prerelease }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Python
        uses: actions/setup-python@v4
        # see details (matrix, python-version, python-version-file, etc.)
        # https://github.com/actions/setup-python
      - name: Install poetry
        uses: abatilo/actions-poetry@v2
      - name: Build and publish to PyPI
        run: |
          poetry config http-basic.pypi __token__ ${{ secrets.PYPI_TOKEN }}
          poetry build -C meteor
          poetry publish --skip-existing -C meteor


